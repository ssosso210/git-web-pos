<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dobbypos.model.mapper.EmployeeMapper"><!-- 클래스 또는 인터페이스 역할 -->

	<!-- private int employeeNo; private String employeeName; private String 
		phoneNo; private String passwd; private String storeCode; private int wage; 
		private String employeeType; private String employeeId; selectEmployees -->

	<sql id="EmployeeColumns">
		employeeNo, employeeName, phoneNo, passwd, storeCode, wage, employeeType, employeeId
	</sql>

	<resultMap type="Employee" id="employeeMap">
		<id property="employeeNo" column="employeeNo" />
		<result property="employeeName" column="employeeName" />
		<result property="phoneNo" column="phoneNo" />
		<result property="passwd" column="passwd" />
		<result property="storeCode" column="storeCode" />
		<result property="wage" column="wage" />
		<result property="employeeType" column="employeeType" />
		<result property="employeeId" column="employeeId" />
	</resultMap>

	<select id="selectEmployeeByCodeAndIdAndPw" parameterType="hashMap"
		resultType="Employee">
		SELECT em.employeeNo, em.employeeName, em.phoneNo,
		em.passwd, em.storeCode,
		em.wage, em.employeeType, em.employeeId
		FROM store st , employee em
		where
		em.storeCode = #{storeCode} and em.employeeId = #{employeeId}
		and st.storeCode = em.storeCode and st.hqCode = #{hqCode}
	</select>

	<select id="selectEmployees" resultMap="employeeMap">
		SELECT employeeNo,employeeName,wage, employeeType 
		FROM employee
		WHERE employeeType = 'user'
	</select>
	
	<select id="selectEmployeeByNo" parameterType="int" resultType="Employee">		
		SELECT employeeNo,employeeName,employeeId,passwd,phoneNo,storeCode,wage,employeeType
		FROM employee
		WHERE employeeNo = #{employeeNo}
		
	</select>

	<insert id="insertEmployee" parameterType="Employee">
		INSERT INTO Employee
		(employeeName, phoneNo, passwd, storeCode,wage, employeeType,
		employeeId)
		VALUES ( #{employeeName}, #{phoneNo}, #{passwd},
		#{storeCode}, #{wage}, #{employeeType}, #{employeeId})
	</insert>
	
	
	<resultMap type="Attendance" id="attendanceMap">
		<id property="attendanceNo" column="attendanceNo" />
		<result property="startWork" column="startWork" />
		<result property="endWork" column="endWork" />
		<result property="employeeNo" column="employeeNo" />
	</resultMap>
	<resultMap type="Employee" id="employeeMap2">
		<id property="employeeNo" column="employeeNo" />
		<result property="employeeName" column="employeeName" />
		<result property="phoneNo" column="phoneNo" />
		<result property="passwd" column="passwd" />
		<result property="storeCode" column="storeCode" />
		<result property="wage" column="wage" />
		<result property="employeeType" column="employeeType" />
		<result property="employeeId" column="employeeId" />
		<association property="attendanceone" column="employeeNo" resultMap="attendanceMap" />
	</resultMap>
	
<!-- 	<select id="selectEmployeesByStoreCodeAndUser" resultMap="employeeMap" >
		SELECT <include refid="EmployeeColumns" /> 
		from employee
		WHERE storeCode = #{id} AND employeeType = 'user'
	</select> -->
	
<!-- 	<select id="selectEmployeesByStoreCodeAndUser" parameterType="string" resultMap="employeeMap2" >
		SELECT 
			at.attendanceNo, at.startWork, at.endWork,
			em.employeeNo, em.employeeName, em.phoneNo, em.passwd, em.storeCode, em.wage, em.employeeType, em.employeeId
		FROM employee em
		LEFT OUTER JOIN attendance at
		ON em.employeeNo = at.employeeNo
		WHERE em.storeCode = #{id} AND em.employeeType = 'user' AND curdate() = DATE_FORMAT(startWork, '%Y-%m-%d')
	</select> -->
	
	
	<select id="selectEmployeesByStoreCodeAndUser" parameterType="string" resultMap="employeeMap2" >
		select  a.attendanceNo , a.startWork, a.endWork,
				b.employeeNo, b.employeeName, b.phoneNo, b.passwd, b.storeCode, b.wage, b.employeeType, b.employeeId
		        from (
		SELECT  at.attendanceNo , at.startWork, at.endWork,
				em.employeeNo, em.employeeName, em.phoneNo, em.passwd, em.storeCode, em.wage, em.employeeType, em.employeeId
		from employee em left outer join attendance at on em.employeeNo = at.employeeNo
		WHERE em.storeCode = #{id} AND em.employeeType = 'user' 
		AND curdate() = (DATE_FORMAT(startWork, '%Y-%m-%d'))) a right outer join employee B on A.employeeNo = B.employeeNo
		WHERE B.employeeType = 'user' 
	</select>

</mapper>